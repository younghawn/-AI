from collections import deque

def bfs_puzzle(start, goal):
    """
    9-퍼즐을 너비 우선 탐색(BFS)으로 푸는 함수.
    start: 시작 상태(튜플)
    goal: 목표 상태(튜플)
    반환값: start ~ goal까지의 최단 경로 (리스트) 또는 None(실패 시)
    """
    queue = deque([start])   # 탐색을 위한 큐(Queue)
    visited = set([start])   # 방문한 상태 기록
    came_from = {}           # 경로 복원용: came_from[자식] = 부모

    while queue:
        current = queue.popleft()
        
        # 목표 상태 도달 시 경로 반환
        if current == goal:
            return reconstruct_path(came_from, current)

        # 이웃 상태
        for neighbor in get_neighbors(current):
            if neighbor not in visited:
                visited.add(neighbor)
                came_from[neighbor] = current
                queue.append(neighbor)

    # goal 상태를 찾지 못한 경우
    return None
